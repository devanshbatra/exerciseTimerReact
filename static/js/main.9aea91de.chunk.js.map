{"version":3,"sources":["components/Timeinput.js","sounds/ride-acoustic02.wav","sounds/perc-hollow.wav","components/Gobtn.js","App.js","reportWebVitals.js","index.js"],"names":["Timeinput","setSets","setRest","setDur","dur","rest","sets","className","type","min","max","value","onChange","e","target","Gobtn","timehandler","rem","restbtn","goclass","setGoclass","progress","width","height","viewBox","fill","strokeDashoffset","cx","cy","r","stroke","strokeWidth","onClick","App","timeremain","restsound","Audio","restSound","startsound","startSound","useState","setRem","setRestbtn","rotstate","setRotstate","setProgress","setcounter","play","firstrem","setInterval","clearInterval","console","log","repsint","remainint","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9aea91de.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Timeinput=({setSets, setRest, setDur, dur, rest, sets})=>{\r\n\r\n    return(\r\n        <div className=\"input-form\">\r\n            <div className=\"sets\">\r\n                <p>SETS</p>\r\n                <input type=\"range\" className=\"inp\" min='0' max='20' value={sets} onChange={e=> setSets(e.target.value) } />\r\n                <h4>{sets}</h4>\r\n            </div>\r\n\r\n            <div className=\"duration\">\r\n                <p>DURATION</p>\r\n                <input type=\"range\" className=\"inp\" min='0' max='120' value={dur} onChange={e=> setDur(e.target.value) } />\r\n                <h4>{dur}s</h4>\r\n            </div>\r\n\r\n            <div className=\"rest\">\r\n                <p>REST</p>\r\n                <input type=\"range\" className=\"inp restinp\" min='0' max='60' value={rest} onChange={e=> setRest(e.target.value) } />\r\n                <h4>{rest}s</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Timeinput;\r\n\r\n","export default __webpack_public_path__ + \"static/media/ride-acoustic02.44e63854.wav\";","export default __webpack_public_path__ + \"static/media/perc-hollow.56a8f67f.wav\";","import React from 'react';\r\n\r\nconst Gobtn = ({ timehandler, sets, dur, rem, restbtn, goclass, setGoclass, progress }) => {\r\n    const goclick = (e) => {\r\n        if (sets !== 0 && dur !== 0) {\r\n            setGoclass(\"go-dissappear\");\r\n            timehandler();\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"go-box\">\r\n            <svg className=\"svg-moving\" width=\"300\" height=\"300\" viewBox=\"0 0 453 453\" fill=\"none\" strokeDashoffset = {progress} >\r\n                <circle cx=\"226.5\" cy=\"226.5\" r=\"216.5\" stroke=\"#018EBA\" strokeWidth=\"20\" />\r\n            </svg>\r\n            <div className=\"btn-div\">\r\n                <h1 onClick={goclick} className={`${goclass} gobutton`}>GO!</h1>\r\n                <div className=\"timers\">\r\n                    <i className=\"fas fa-dumbbell dumbell-icon\"></i>\r\n                    <h3 className=\"remain-time\" >{rem} sec</h3>\r\n                    <p className=\"remain-label\" >remaining</p>\r\n                    <h1 className={`${restbtn} rest-circle`} >REST</h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Gobtn;","import React, { useState } from 'react';\nimport './App.css';\nimport Timeinput from './components/Timeinput';\nimport startSound from './sounds/ride-acoustic02.wav';\nimport restSound from './sounds/perc-hollow.wav';\nimport Gobtn from './components/Gobtn';\nconst App = () => {\n  const restsound = new Audio(restSound);\n  const startsound = new Audio(startSound);\n  const [sets, setSets] = useState(3);\n  const [dur, setDur] = useState(5);\n  const [rest, setRest] = useState(10);\n  const [rem, setRem] = useState(0);\n  const [restbtn, setRestbtn] = useState(\"\");\n  const [goclass, setGoclass] = useState(\"\");\n  const [rotstate, setRotstate] = useState(\"\");\n  const [progress, setProgress] = useState(1360);\n  let timeremain;\n\n  function timehandler() {\n    setRotstate(\"rotanimclass\");\n    let setcounter = sets;\n    setRem(dur);\n    timeremain = dur;\n    startsound.play();\n    const firstrem = setInterval(() => {\n      timeremain -= 1;\n      setRem((rem) => rem -= 1);\n      setProgress((progress)=> progress=(1360*timeremain)/dur);\n      if (timeremain === -1) {\n        clearInterval(firstrem);\n        console.log(\"first wala time remaining stopped\");\n        setProgress(1360);\n        setRestbtn(\"rest-appear\");\n        setRem(dur);\n        timeremain = dur;\n        restsound.play();\n      }\n    }, 1000);\n\n    const repsint = setInterval(() => {\n      setRestbtn(\"\");\n      startsound.play(2);\n      const remainint = setInterval(() => {\n        if (setcounter === 0) {\n          clearInterval(remainint);\n        }\n        timeremain -= 1;\n        setRem((rem) => rem -= 1);\n        setProgress((progress)=> progress=(1360*timeremain)/dur);\n        if (timeremain === -1) {\n          clearInterval(remainint);\n          console.log(\" beech wala time remaining stopped\");\n          setProgress(1360);\n          setRem(dur);\n          timeremain = dur;\n          console.log(\"rest start\");\n          setRestbtn(\"rest-appear\");\n          restsound.play();\n        }\n\n      }, 1000);\n\n      setcounter -= 1;\n      console.log(\"sets remaining: \", setcounter);\n      if (setcounter === 0) {\n        clearInterval(repsint);\n        timeremain = 0;\n        clearInterval(remainint);\n        clearInterval(firstrem);\n        setRem(0);\n        setGoclass(\"\");\n        setRotstate(\"\");\n        console.log('stopped');\n      }\n    }, dur*1000+(rest+1)*1000);\n\n  }\n\n  // function sleep(milliseconds) {\n  //   const date = Date.now();\n  //   let currentDate = null;\n  //   do {\n  //     currentDate = Date.now();\n  //   } while (currentDate - date < milliseconds);\n  // }\n\n\n\n  return (\n    <div className=\"App\">\n      <nav className=\"nav\">\n        <h1 className=\"main-heading\">Exercise Timer</h1>\n      </nav>\n      <Timeinput setSets={setSets} sets={sets} setDur={setDur} dur={dur} setRest={setRest} rest={rest} />\n      <Gobtn timehandler={timehandler} dur={dur} sets={sets} rem={rem} restbtn={restbtn} setGoclass={setGoclass} goclass={goclass} progress={progress}/>\n      <div className=\"stop\">\n        <a href=\"/\" className=\"stop-btn\"><i className=\"far fa-stop-circle stop-icon\"></i></a>\n        <div className={`rotate ${rotstate}`}></div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}